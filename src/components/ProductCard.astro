---
interface Props {
  product: {
    id: number;
    image: string;
    title: string;
    description: string;
    price: string;
    category: string;
    featured: boolean;
  };
}

const { product } = Astro.props;
---

<a href={`/product/${product.id}`} class="cursor-pointer group relative rounded-2xl  transition-all duration-300  p-4 block">
  <!-- Featured Badge -->
  {product.featured && (
    <div class="absolute top-6 left-6 z-10">
      <span class="inline-flex items-center rounded-full bg-primary px-3 py-1 text-xs font-medium text-bg">
        Featured
      </span>
    </div>
  )}

  <!-- Image Container -->
  <div class="aspect-square mb-4 overflow-hidden rounded-xl bg-bg/60 relative">
    <img 
      src={product.image} 
      alt={product.title}
      class="h-full w-full object-cover transition-transform duration-500 ease-out group-hover:scale-110"
    />
    
    
    <!-- Quick Actions -->
    <div class="absolute bottom-4 right-0 opacity-0 group-hover:opacity-100 transition-all duration-300 transform translate-y-2 group-hover:translate-y-0">
      <div class="flex gap-2">
        <button class="add-to-cart-btn cursor-pointer bg-primary text-bg px-4 py-2 rounded-lg font-medium text-sm hover:bg-primary/90 transition-colors duration-200 flex items-center justify-center gap-2" 
                data-product-id={product.id}
                data-product-title={product.title}
                data-product-price={product.price}
                data-product-image={product.image}
                data-product-category={product.category}>
          <svg class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" d="M2.25 3h1.386c.51 0 .955.343 1.087.835l.383 1.437M7.5 14.25a3 3 0 0 0-3 3h15.75m-12.75-3h11.218c1.121-2.3 2.1-4.684 2.924-7.138a60.114 60.114 0 0 0-16.536-1.84M7.5 14.25 5.106 5.272M6 20.25a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0Zm12.75 0a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0Z" />
          </svg>
        </button>
        <button class="cursor-pointer bg-bg/90 text-fg p-2 rounded-lg hover:bg-bg transition-colors duration-200" aria-label="Quick view">
          <svg class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" d="M2.036 12.322a1.012 1.012 0 0 1 0-.639C3.423 7.51 7.36 4.5 12 4.5c4.638 0 8.573 3.007 9.963 7.178.07.207.07.431 0 .639C20.577 16.49 16.64 19.5 12 19.5c-4.638 0-8.573-3.007-9.963-7.178Z" />
            <path stroke-linecap="round" stroke-linejoin="round" d="M15 12a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z" />
          </svg>
        </button>
      </div>
    </div>
  </div>
  
  <!-- Content -->
  <div class="flex flex-col h-28 px-2">
    <div class="flex-1">
      <!-- Category Tag -->
      <div class="mb-2">
        <span class="inline-flex items-center rounded-md px-0 py-1 text-xs font-medium text-primary capitalize">
          {product.category}
        </span>
      </div>
      
      <h3 class="text-lg font-semibold text-fg group-hover:text-primary transition-colors duration-200 leading-tight">
        {product.title}
      </h3>
      <p class="mt-1 text-sm text-fg/70 line-clamp-1">{product.description}</p>
    </div>
    
    <div class="flex items-center justify-between mt-auto pt-3">
      <span class="text-lg font-bold text-primary">{product.price}</span>
      <button class="inline-flex items-center gap-1 text-sm font-medium text-primary hover:text-primary/80 transition-colors duration-200 group/btn">
        <span class="hidden sm:inline">Details</span>
        <svg class="h-4 w-4 transition-transform duration-200 group-hover/btn:translate-x-1" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" d="M13.5 4.5 21 12m0 0-7.5 7.5M21 12H3" />
        </svg>
      </button>
    </div>
  </div>
</a>

<script>
  // Add to cart functionality for product cards
  document.addEventListener('DOMContentLoaded', () => {
    // Handle add to cart button clicks
    document.addEventListener('click', (e) => {
      const target = e.target as HTMLElement;
      const addToCartBtn = target.closest('.add-to-cart-btn') as HTMLElement;
      
      if (addToCartBtn) {
        e.preventDefault();
        e.stopPropagation();
        
        // Get product data from button attributes
        const productData = {
          id: parseInt(addToCartBtn.dataset.productId!),
          title: addToCartBtn.dataset.productTitle!,
          price: addToCartBtn.dataset.productPrice!,
          image: addToCartBtn.dataset.productImage!,
          category: addToCartBtn.dataset.productCategory!
        };
        
        // Dispatch custom event to add item to cart
        const addToCartEvent = new CustomEvent('addToCart', {
          detail: productData,
          bubbles: true
        });
        
        document.dispatchEvent(addToCartEvent);
        
        // Visual feedback on the button
        addToCartBtn.classList.add('scale-95');
        setTimeout(() => {
          addToCartBtn.classList.remove('scale-95');
        }, 150);
      }
    });
  });
</script> 